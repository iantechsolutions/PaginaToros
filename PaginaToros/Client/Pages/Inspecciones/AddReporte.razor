@page "/inforeporte/{Id:int}"
@using Blazored.Typeahead
@using PaginaToros.Client.Pages.CrudInspecciones
<style>
    .bm-title {
        font-size: 25px;
        font-weight: bold;
    }

</style>
@if(!cargando){
<div>
    
    <div class="row" style="width=100%;">
        <div class="col-md-1" />
        <div class="col-md-3">
            <label>Socio</label>
            <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Busque socio por nombre" EnableDropDown="true" @bind-Value="socioSeleccionado" Disabled="solicitudSeleccionada!=null">
                <SelectedTemplate Context="eleccion">
                    @eleccion.Nombre
                </SelectedTemplate>
                <ResultTemplate Context="eleccion">
                    @eleccion.Nombre
                </ResultTemplate>
            </BlazoredTypeahead>
        </div>
        <div class="col-md-3"/>
        @if (@socioSeleccionado != null)
        {
        <div class="col-md-3">
            <label>Solicitud</label>
            @if (Id != 0 && socioSeleccionado != null)
            {
                        <RadzenNumeric Disabled="true" @bind-Value="@solicitudSeleccionada.Nrosol" class="w-100"></RadzenNumeric>
            }
            else
            {
            <BlazoredTypeahead SearchMethod="BusquedaSolicitudes" placeholder="Busque solicitud por numero" EnableDropDown="true" @bind-Value="solicitudSeleccionada" Disabled="confirmado">
                <SelectedTemplate Context="eleccion">
                    @eleccion.Nrosol
                </SelectedTemplate>
                <ResultTemplate Context="eleccion">
                    @eleccion.Nrosol
                </ResultTemplate>
            </BlazoredTypeahead>
            }
        </div>
        <div class="col-md-2" />
        }
    </div>
    @if(solicitudSeleccionada!=null){
        <br />
        <div class="row" style="width=100%;">
            <div class="col-sm-1" />
            <div class="col-sm">
                <label>Inspector</label>
                <br/>
                    <BlazoredTypeahead SearchMethod="BusquedaInspects" placeholder="Busque inspector por nombre" EnableDropDown="true" @bind-Value="inspectorSeleccionado">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Nombre
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Nombre
                        </ResultTemplate>
                    </BlazoredTypeahead>
            </div>
            <div class="col-sm">
                <label class="col-sm">Numero de Socio</label>
                <br/>
                <RadzenNumeric @bind-Value="@socioSeleccionado.Scod" placeholder="Nro Socio" Disabled="true"></RadzenNumeric>
            </div>
            <div class="col-sm">
                <label class="col-sm">Nombre de Socio</label>
                <br />
                <RadzenTextBox @bind-Value="@socioSeleccionado.Nombre" placeholder="Nombre de Socio" Disabled="true"></RadzenTextBox>
            </div>

        </div>
        <br />
        <div class="row" style="width=100%;">
            <div class="col-sm-1" />
            <div class="col-sm">
                <label class="col-sm">Establecimiento</label>
                <br />
                    <RadzenTextBox @bind-Value="@solicitudSeleccionada.Codest" Disabled="true" placeholder="Establecimiento"></RadzenTextBox>
            </div>
            <div class="col-sm">
                <label class="col-sm">Localidad</label>
                <br />
                @if (establecimientoSeleccionado != null)
                {
                    <RadzenTextBox @bind-Value="@establecimientoSeleccionado.Locali" Disabled="true" placeholder="Localidad"></RadzenTextBox>
                }
                else{
                    <RadzenTextBox @bind-Value="@establecimientos.Where(x=>x.Ecod==solicitudSeleccionada.Codest).First().Locali" Disabled="true" placeholder="Localidad"></RadzenTextBox>
                }
                
            </div>
            <div class="col-sm">
                    <label>Plantel</label>
                    <BlazoredTypeahead SearchMethod="BusquedaPlanteles" style="max-width:26.7%" placeholder="Busque plantel por numero" EnableDropDown="true" @bind-Value="Plantelseleccionado">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Placod
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Placod
                        </ResultTemplate>
                    </BlazoredTypeahead>
            </div>
        </div>
        <br />

        <div class="row" style="width=100%;">
            <div class="col-sm-1" />
            <div class="col-sm">
                <label class="col-sm">Fecha De Solicitud</label>
                <RadzenDatePicker TValue="DateTime?" @bind-Value="@solicitudSeleccionada.Fecsol" ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
            </div>
            <div class="col-sm">
                <label class="col-sm">Fecha De Inspeccion</label>
                @if (@Id != 0)
                {
                        <RadzenDatePicker TValue="DateTime?" @bind-Value="@oResin1.Freali" ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
                }
                else
                {
                    <RadzenDatePicker TValue="DateTime" @bind-Value="@fechaTemp" ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
                }
            </div>
            <div class="col-sm">
                <label class="col-sm">Reinspeccion?</label>
                <br />
                <input type="checkbox" @bind="@tempReinspeccion">
            </div>
        </div>
        <br />
        <button class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;left:126px;" @onclick="()=>confirmarNuevo()">Guardar Datos</button>
        <br />
        <br />
         @if (confirmado){
            <RadzenTabs Class="w-100 mx-auto" RenderMode="TabRenderMode.Server">
                <Tabs>
                    <RadzenTabsItem Text="Movimientos">
                        <button class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;left:13px;" @onclick="()=>agregarMov()">Agregar Movimiento</button>
                        <br/>
                        <br />
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    <table class="table table-bordered text-center">
                                        <thead>
                                            <tr>
                                                <th rowspan="2" style="background-color: #FFFFFF;"></th>
                                                <th rowspan="2" style="background-color: #999999;">TIPO DE MOVIMIENTO</th>
                                                <th rowspan="2" style="background-color: #666666;">MOTIVO</th>
                                                <th colspan="3" style="background-color: #999999;">PURO REGISTRADO</th>
                                                <th colspan="3" style="background-color: #999999;">VIP</th>
                                            </tr>
                                            <tr style="background-color: #FFFFFF;">
                                                <th style="background-color: #FFFFFF;">VACAS</th>
                                                <th style="background-color: #FFFFFF;">VAQUILL c/ Servicio</th>
                                                <th style="background-color: #FFFFFF;">VAQUILL s/Servicio</th>
                                                <th style="background-color: #FFFFFF;">VACAS</th>
                                                <th style="background-color: #FFFFFF;">VAQUILL c/Servicio o preñadas</th>
                                                <th style="background-color: #FFFFFF;">VAQUILL s/Servicio</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr style="background-color: #33CCFF;">
                                                <td style="background-color: #999999;"><strong>EXISTENCIA ANTERIOR</strong></td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@estadoAnterior.Ea1</td>
                                                <td>@estadoAnterior.Ea2</td>
                                                <td>@estadoAnterior.Ea3</td>
                                                <td>@estadoAnterior.Ea4</td>
                                                <td>@estadoAnterior.Ea5</td>
                                                <td>@estadoAnterior.Ea6</td>
                                            </tr>
                                            @foreach (var mov in mtos)
                                            {
                                                <tr>
                                                    <td></td>
                                                    <td>@traductor[mov.Tipmov]</td>
                                                    <td>@traductor[mov.Ctomov]</td>
                                                    <td>@mov.Rdvac</td>
                                                    <td>@mov.Rdvaqcs</td>
                                                    <td>@mov.Rdvaqss</td>
                                                    <td>@mov.Rpvac</td>
                                                    <td>@mov.Rpvaqcs</td>
                                                    <td>@mov.Rpvaqss</td>
                                                </tr>
                                            }
                                            <tr style="background-color: #FFFF66;">
                                                <td style="background-color: #999999;"><strong>Total Entradas</strong></td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@entradasFinal.Ea1</td>
                                                <td>@entradasFinal.Ea2</td>
                                                <td>@entradasFinal.Ea3</td>
                                                <td>@entradasFinal.Ea4</td>
                                                <td>@entradasFinal.Ea5</td>
                                                <td>@entradasFinal.Ea6</td>
                                            </tr>
                                            <tr style="background-color: #FFCC99;">
                                                <td style="background-color: #999999;"><strong>Total Salidas</strong></td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@salidasFinal.Ea1</td>
                                                <td>@salidasFinal.Ea2</td>
                                                <td>@salidasFinal.Ea3</td>
                                                <td>@salidasFinal.Ea4</td>
                                                <td>@salidasFinal.Ea5</td>
                                                <td>@salidasFinal.Ea6</td>
                                                
                                            </tr>
                                            <tr style="background-color: #FF9966;">
                                                <td style="background-color: #999999;"><strong>EXISTENCIA ACTUAL</strong></td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@estadoFinal.Ea1</td>
                                                <td>@estadoFinal.Ea2</td>
                                                <td>@estadoFinal.Ea3</td>
                                                <td>@estadoFinal.Ea4</td>
                                                <td>@estadoFinal.Ea5</td>
                                                <td>@estadoFinal.Ea6</td>
                                                
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Hembras y Machos">
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    <table class="table table-bordered text-center">
                                        <thead>
                                            <tr bgcolor="#008000">
                                                <th style="background-color: #FFFFFF;"></th>
                                                <th>Presentadas</th>
                                                <th>Mocha Marcada</th>
                                                <th>Astada Marcada</th>
                                                <th>PR Total</th>
                                                <th>VIP Total</th>
                                                <th>Rechazadas</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- Vaq PR -->
                                            <tr>
                                                <td><strong>Vaq PR</strong></td>
                                                <td>@hemyma.Hdp</td>
                                                <td>@hemyma.HdpM</td>
                                                <td>@hemyma.HdpAs</td>
                                                <td>@(hemyma.HdpM+hemyma.HdpAs)</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">@(hemyma.Hdp - hemyma.HdpM - hemyma.HdpAs)</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("vaqpr"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                            <!-- Otros PR -->
                                            <tr>
                                                <td><strong>Otros PR</strong></td>
                                                <td>@hemyma.Hpp</td>
                                                <td>@hemyma.HppM</td>
                                                <td>@hemyma.HppAs</td>
                                                <td>@(hemyma.HppM+hemyma.HppAs)</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">@(hemyma.Hpp - hemyma.HppM - hemyma.HppAs)</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("otrospr"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                            <!-- Vacas VIP -->
                                            <tr >
                                                <td><strong>Vacas VIP</strong></td>
                                                <td>@hemyma.Hgvp</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@hemyma.Hgvb</td>
                                                <td style="background-color: #666666;">@(hemyma.Hgvp-hemyma.Hgvb)</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("vacvip"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                            <!-- Vaq VIP -->
                                            <tr>
                                                <td><strong>Vaq VIP</strong></td>
                                                <td>@hemyma.Hgqp</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td>@hemyma.Hgqb</td>
                                                <td style="background-color: #666666;">@(hemyma.Hgqp - hemyma.Hgqb)</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("vaqvip"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                            <!-- TOTALES -->
                                            <tr style="background-color: #FF9966;">
                                                <td><strong>TOTALES</strong></td>
                                                <td>@(hemyma.Hdp + hemyma.Hpp + hemyma.Hgvp + hemyma.Hgqp)</td>
                                                <td>@(hemyma.HppM + hemyma.HdpM)</td>
                                                <td>@(hemyma.HppAs + hemyma.HdpAs)</td>
                                                <td>@((hemyma.HdpM + hemyma.HdpAs) + (hemyma.HppM + hemyma.HppAs))</td>
                                                <td>@(hemyma.Hgvb + hemyma.Hgqb)</td>
                                                <td>@((hemyma.Hdp - hemyma.HdpM - hemyma.HdpAs) + (hemyma.Hpp - hemyma.HppM - hemyma.HppAs) + (hemyma.Hgvb - hemyma.Hgvp) + (hemyma.Hgqb - hemyma.Hgqp))</td>
                                                <td style="background-color: #fff;"></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <br/>
                        <br/>
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    <table class="table table-bordered text-center">
                                        <thead>
                                            <tr bgcolor="#008000">
                                                <th style="bgcolor:#FFFFFF"></th>
                                                <th>Presentados</th>
                                                <th>PR Mochos</th>
                                                <th>PR Astados</th>
                                                <th>PR Total</th>
                                                <th>Rechazadas</th>
                                                <th>Control S/</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- S.C.P. -->
                                            <tr>
                                                <td><strong>S.C.P.</strong></td>
                                                <td>@hemyma.Mcp</td>
                                                <td>@hemyma.McpM</td>
                                                <td>@hemyma.McpAs</td>
                                                <td>@(hemyma.McpM + hemyma.McpAs)</td>
                                                <td style="background-color: #666666;">@(hemyma.Mcp-hemyma.McpM - hemyma.McpAs)</td>
                                                <td style="background-color: #666666;">-</td>
                                                <td style="background-color: #fff;"><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("scp"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                            <!-- C.P. -->
                                            <tr>
                                                <td><strong>C.P.</strong></td>
                                                <td>@hemyma.Msp</td>
                                                <td>@hemyma.MspM</td>
                                                <td>@hemyma.MspAs</td>
                                                <td>@(hemyma.MspM + hemyma.MspAs)</td>
                                                <td style="background-color: #666666;">@(hemyma.Msp - hemyma.MspM - hemyma.MspAs)</td>
                                                <td>@hemyma.Mspsb</td>
                                                <td style="background-color: #fff;"><button class="btn" title="Ver info" @onclick='() => (agregarHembraMacho("cp"))'><FeatherInfo Size="16" Color="blue" /></button></td>
                                            </tr>
                                                <tr style="background-color: #FF9966;">
                                                    <td><strong>TOTALES</strong></td>
                                                    <td>@(hemyma.Mcp + hemyma.Msp)</td>
                                                    <td>@(hemyma.McpM + hemyma.MspM)</td>
                                                    <td>@(hemyma.McpAs + hemyma.MspAs)</td>
                                                    <td>@(hemyma.MspM + hemyma.MspAs + hemyma.McpM + hemyma.McpAs)</td>
                                                    <td>@((hemyma.Msp - hemyma.MspM - hemyma.MspAs) + (hemyma.Mcp - hemyma.McpM - hemyma.McpAs))</td>
                                                    <td>@hemyma.Mspsb</td>
                                                    <td style="background-color: #fff;"></td>
                                                </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                    <RadzenTabsItem Text="Informe general">
                        <br/>
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    <table class="table table-bordered text-center">
                                        <thead>
                                            <tr bgcolor="#008000">
                                                <th style="background-color: #FFFFFF;"></th>
                                                <th>Promedio Edad</th>
                                                <th>Promedio Peso</th>
                                                <th>Max. Edad</th>
                                                <th>Max. Peso</th>
                                                <th>Min. Edad</th>
                                                <th>Min. Peso</th>
                                                <th>Diente de Leche %</th>
                                                <th>Dos Dientes %</th>
                                                <th>Cuatro Dientes %</th>
                                                <th style="background-color: #FFFFFF;"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <!-- HEMBRAS -->
                                            <tr>
                                                <td><strong>HEMBRAS</strong></td>
                                                <td>@promediohembra.Pedad</td>
                                                <td>@promediohembra.Ppeso</td>
                                                <td>@promediohembra.Medad</td>
                                                <td>@promediohembra.Mpeso</td>
                                                <td>@promediohembra.Iedad</td>
                                                <td>@promediohembra.Ipeso</td>
                                                <td>@promediohembra.Pdl</td>
                                                <td>@promediohembra.P2d</td>
                                                <td>@promediohembra.P4d</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (editarPromedio(promediohembra.Id,"H"))'><FeatherEdit Color="green" /></button></td>
                                            </tr>
                                            <!-- MACHOS -->
                                            <tr>
                                                <td><strong>MACHOS</strong></td>
                                                <td>@promediomacho.Pedad</td>
                                                <td>@promediomacho.Ppeso</td>
                                                <td>@promediomacho.Medad</td>
                                                <td>@promediomacho.Mpeso</td>
                                                <td>@promediomacho.Iedad</td>
                                                <td>@promediomacho.Ipeso</td>
                                                <td>@promediomacho.Pdl</td>
                                                <td>@promediomacho.P2d</td>
                                                <td>@promediomacho.P4d</td>
                                                <td><button class="btn" title="Ver info" @onclick='() => (editarPromedio(promediomacho.Id,"M"))'><FeatherEdit Color="green" /></button></td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                        <br />
                        <br />
                        <div class="container">
                            <div class="row">
                                <div class="col">
                                    <button class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;left:13px;" @onclick="()=>agregarRechazo(0)">Agregar Causal de rechazo</button>
                                    <br/>
                                    <br/>
                                    <table class="table table-bordered text-center">
                                        <thead>
                                            <tr bgcolor="#008000" >
                                                <th style="background-color: #FFFFFF;">#</th>
                                                <th>Motivo</th>
                                                <th>Hembras</th>
                                                <th>Machos</th>
                                                <th style="background-color: #FFFFFF;width:13.33%;"></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var re in rechazos)
                                            {
                                                <tr>
                                                    <td></td>
                                                    <td>@traductor[re.MotivoRechazo.ToString()]</td>
                                                    <td>@re.Hembras</td>
                                                    <td>@re.Machos</td>
                                                    <td style="width:13.33%;">
                                                        <button class="btn" title="Editar Rechazo" @onclick='() => (agregarRechazo(re.Id))'><FeatherEdit Color="green" /></button>
                                                        <button class="btn" title="Editar Rechazo" @onclick='() => (alertaDeleteRechazo(re.Id))'><FeatherTrash Color="red" /></button>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </RadzenTabsItem>
                </Tabs>
            </RadzenTabs>

    }
    }
    </div>
}
else
{
    <br />
    <center>
        <div class="mb-2">
            <br />
            <RadzenProgressBar style="position:relative;width:93.5%" Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Primary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}
@code {

    [CascadingParameter] public IModalService Modal { get; set; } = default!;

    bool tempReinspeccion = false;

    List<Socio> socios = new();
    Socio? socioSeleccionado = null;

    List<Resin8> rechazos = new();
    List<Resin3> mtos = new();
    Resin6 hemyma = new();

    Resin4 promediohembra = new();
    Resin4 promediomacho = new();

    List<Inspect> Inspects = new();
    Inspect? inspectorSeleccionado = new();

    List<Resin1> resultados = new();
    List<Estable> establecimientos = new();

    List<Plantel> Planteles = new();
    Plantel? Plantelseleccionado = new();

    Estable? establecimientoSeleccionado = null;
    List<Resin4> promedios = new();
    List<Solici1> solicitudes = new();
    Solici1? solicitudSeleccionada = null;
    bool confirmado = false;
    bool cargando = true;
    Resin1? oResin1 = new();
    DateTime fechaTemp = DateTime.Now;
    Respuesta<Resin1> oRespuesta = new();
    Resin2 estadoAnterior = new();
    Resin2 salidasFinal = new();
    Resin2 entradasFinal = new();
    Resin2 estadoFinal = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int Id { get; set; }
    Dictionary<string, string> traductor = new Dictionary<string, string>{
        {"CO","Compras"},
        {"VE","Ventas"},
        {"CC","Cambio Categoria"},
        {"PI","Por Inspeccion"},
        {"EP","Epidemias"},
        {"RE","Rechazos"},
        {"OT","Otros"},
        {"E","Entrada"},
        {"S","Salida"},
        {"1","Pelaje"},
        {"2","Estado"},
        {"3","Desarrollo"},
        {"4","Aplomo"},
        {"5","Estructura"},
        {"6","Conformacion"},
        {"7","Pureza"},
        {"8","Sanidad"},
        {"9","Otros"},
    };

    bool activo = true;

    protected override async Task OnInitializedAsync()
    {
        try{
            var rtaaa = await Http.GetFromJsonAsync<Respuesta<List<Inspect>>>("/api/Inspect");
            Inspects = rtaaa.List;
            var plan = await Http.GetFromJsonAsync<Respuesta<List<Plantel>>>("/api/Plantel");
            Planteles = plan.List;
            if (Id != 0)
            {
                var res = await Http.GetFromJsonAsync<Respuesta<Resin1>>($"/api/Resin1/{Id}");
                oResin1 = res.List;

                var socio = await Http.GetFromJsonAsync<Respuesta<Socio>>($"/api/Socio/codigo/{oResin1.Scod}");
                socioSeleccionado = socio.List;

                var sol = await Http.GetFromJsonAsync<Respuesta<Solici1>>($"/api/Solici1/nrores/{oResin1.Nrores}");
                solicitudSeleccionada = sol.List;

                var estable = await Http.GetFromJsonAsync<Respuesta<Estable>>($"/api/Establecimiento/codigo/{solicitudSeleccionada.Codest}");
                establecimientoSeleccionado = estable.List;

                inspectorSeleccionado = Inspects.Where(x => x.Icod == oResin1.Icod).FirstOrDefault();
                Plantelseleccionado = Planteles.Where(x =>x.Placod==oResin1.Nropla).FirstOrDefault();
                await updateEstadoHistorico(solicitudSeleccionada.Nrosol);

                await updatePromedios(solicitudSeleccionada.Nrosol);

                await updateRechazos(solicitudSeleccionada.Nrosol);

                await updateMovimientos(solicitudSeleccionada.Nrosol, "no");

                await updateHembrasMachos(solicitudSeleccionada.Nrosol);

                confirmado = true;
            }
            else{
                var rta = await Http.GetFromJsonAsync<Respuesta<List<Socio>>>($"/api/socio");
                socios = rta.List.ToList();
                var rtaa = await Http.GetFromJsonAsync<Respuesta<List<Solici1>>>("/api/Solici1/pendientes");
                solicitudes = rtaa.List;
                var rt = await Http.GetFromJsonAsync<Respuesta<List<Resin1>>>("/api/Resin1");
                resultados = rt.List;
                var respuesta = await Http.GetFromJsonAsync<Respuesta<List<Estable>>>($"/api/Establecimiento");
                establecimientos = respuesta.List;

            }
        }
        catch(Exception ex)
        {
            oRespuesta.Mensaje = ex.Message;
        }
        cargando = false;

    }

    async Task guardarReporte()
    {
        oResin1.Id = Id;
        oResin1.Nrores = solicitudSeleccionada.Nrosol;
        oResin1.Icod = inspectorSeleccionado.Icod;
        oResin1.Scod = socioSeleccionado.Scod;
        oResin1.Estcod = solicitudSeleccionada.Codest;
        if (Id == 0)
        {
            oResin1.Nropla = socioSeleccionado.Placod;
            oResin1.Freali = fechaTemp;
            await Http.PostAsJsonAsync<Resin1>("/api/Resin1", oResin1);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await Http.PutAsJsonAsync<Resin1>("/api/Resin1", oResin1);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }

    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }
    async Task crearHistorico(string nrores)
    {
        var temp = new Resin2();
        temp.Ea1 = Convert.ToInt32(Plantelseleccionado.Varede);
        temp.Ea2 = Convert.ToInt32(Plantelseleccionado.Vqcsrd);
        temp.Ea3 = Convert.ToInt32(Plantelseleccionado.Vqssrd);
        temp.Ea4 = Convert.ToInt32(Plantelseleccionado.Varepr);
        temp.Ea5 = Convert.ToInt32(Plantelseleccionado.Vqcsrp);
        temp.Ea6 = Convert.ToInt32(Plantelseleccionado.Vqssrp);
        temp.Nrores = nrores;
        await Http.PostAsJsonAsync<Resin2>("/api/Resin2", temp);
    }


    async Task updatePromedios(string nrores)
    {
        var rtt = await Http.GetFromJsonAsync<Respuesta<List<Resin4>>>($"/api/Resin4/nrores/{nrores}");
        if (rtt.List.Count() > 0)
        {
            try{
                promediohembra = rtt.List.Where(x => x.Sexo == "H").First();
                promediomacho = rtt.List.Where(x => x.Sexo == "M").First();
            }
            catch
            {

            }
        }
    }
    async Task updateRechazos(string nrores)
    {
        var res = await Http.GetFromJsonAsync<Respuesta<List<Resin8>>>($"/api/Resin8/nrores/{nrores}");
        rechazos = res.List;
    }
    async Task updateMovimientos(string nrores, string condicion)
    {
        var respuesta = await Http.GetFromJsonAsync<Respuesta<List<Resin3>>>($"/api/Resin3/nrores/{nrores}");
        mtos = respuesta.List;

        foreach (var mov in mtos)
        {
            if (mov.Tipmov == "S")
            {
                salidasFinal.Ea1 += Convert.ToInt32(mov.Rdvac);
                salidasFinal.Ea2 += Convert.ToInt32(mov.Rdvaqcs);
                salidasFinal.Ea3 += Convert.ToInt32(mov.Rdvaqss);
                salidasFinal.Ea4 += Convert.ToInt32(mov.Rpvac);
                salidasFinal.Ea5 += Convert.ToInt32(mov.Rpvaqcs);
                salidasFinal.Ea6 += Convert.ToInt32(mov.Rpvaqss);
            }
            else
            {
                entradasFinal.Ea1 += Convert.ToInt32(mov.Rdvac);
                entradasFinal.Ea2 += Convert.ToInt32(mov.Rdvaqcs);
                entradasFinal.Ea3 += Convert.ToInt32(mov.Rdvaqss);
                entradasFinal.Ea4 += Convert.ToInt32(mov.Rpvac);
                entradasFinal.Ea5 += Convert.ToInt32(mov.Rpvaqcs);
                entradasFinal.Ea6 += Convert.ToInt32(mov.Rpvaqss);
            }
        }
        estadoFinal.Ea1 = estadoAnterior.Ea1 - salidasFinal.Ea1 + entradasFinal.Ea1;
        estadoFinal.Ea2 = estadoAnterior.Ea2 - salidasFinal.Ea2 + entradasFinal.Ea2;
        estadoFinal.Ea3 = estadoAnterior.Ea3 - salidasFinal.Ea3 + entradasFinal.Ea3;
        estadoFinal.Ea4 = estadoAnterior.Ea4 - salidasFinal.Ea4 + entradasFinal.Ea4;
        estadoFinal.Ea5 = estadoAnterior.Ea5 - salidasFinal.Ea5 + entradasFinal.Ea5;
        estadoFinal.Ea6 = estadoAnterior.Ea6 - salidasFinal.Ea6 + entradasFinal.Ea6;
        if(condicion!="no" && Plantelseleccionado!=null){
            Plantelseleccionado.Varede = estadoFinal.Ea1;
            Plantelseleccionado.Vqcsrd = estadoFinal.Ea2;
            Plantelseleccionado.Vqssrd = estadoFinal.Ea3;
            Plantelseleccionado.Varepr = estadoFinal.Ea4;
            Plantelseleccionado.Vqcsrp = estadoFinal.Ea5;
            Plantelseleccionado.Vqssrp = estadoFinal.Ea6;
            await Http.PutAsJsonAsync<Plantel>("/api/Plantel", Plantelseleccionado);
        }

    }
    async Task updateHembrasMachos(string nrores)
    {
        try
        {
            var rta = await Http.GetFromJsonAsync<Respuesta<List<Resin6>>>($"/api/Resin6/nrores/{nrores}");
            hemyma = rta.List.First();
        }
        catch { }
    }
    async Task updateEstadoHistorico(string nrores)
    {
        try
        {
            var rt = await Http.GetFromJsonAsync<Respuesta<List<Resin2>>>($"/api/Resin2/nrores/{nrores}");
            estadoAnterior = rt.List.First();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    async Task confirmar()
    {

        confirmado = true;
        string nrores = solicitudSeleccionada.Nrosol;

        guardarReporte();

        await updatePromedios(nrores);

        await updateRechazos(nrores);

        await updateMovimientos(nrores, "no");

        await updateHembrasMachos(nrores);


        await updateEstadoHistorico(nrores);

        //cambiar todos los gets a unicos por nrosol
    }

    async Task confirmarNuevo()
    {

        crearHistorico(solicitudSeleccionada.Nrosol);
        confirmar();
    }


    async Task agregarMov()
    {
        try
        {
            var parameters = new ModalParameters();
            parameters.Add(nameof(AddMovimientoRe.Id), 0);
            parameters.Add(nameof(AddMovimientoRe.numeroRes), solicitudSeleccionada.Nrosol);
            var options = new ModalOptions()
                {
                    Size = ModalSize.ExtraLarge
                };
            var formModal = Modal.Show<AddMovimientoRe>("Agregar Movimiento", parameters, options);
            var result = await formModal.Result;
            if (result.Cancelled)
            {
                Console.WriteLine("Modal was cancelled");
            }
            else
            {
                await updateMovimientos(solicitudSeleccionada.Nrosol, "si");
            }
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }


    async Task agregarHembraMacho(string parametro)
    {
        try
        {
            var parameters = new ModalParameters();
            parameters.Add(nameof(AddHembraMachoRe.Id), hemyma.Id);
            parameters.Add(nameof(AddHembraMachoRe.botonclick), parametro);
            parameters.Add(nameof(AddMovimientoRe.numeroRes), solicitudSeleccionada.Nrosol);
            var options = new ModalOptions()
                {
                    Size = ModalSize.ExtraLarge
                };
            var formModal = Modal.Show<AddHembraMachoRe>("Editar", parameters, options);
            var result = await formModal.Result;
            if (result.Cancelled)
            {
                Console.WriteLine("Modal was cancelled");
            }
            else
            {
                await updateHembrasMachos(solicitudSeleccionada.Nrosol);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    async Task editarPromedio(int id,string sexo)
    {
        try
        {
            var parameters = new ModalParameters();
            parameters.Add(nameof(AddEdadMesPromedioRe.Id), id);
            parameters.Add(nameof(AddEdadMesPromedioRe.nrores), solicitudSeleccionada.Nrosol);
            parameters.Add(nameof(AddEdadMesPromedioRe.sexo), sexo);
            var options = new ModalOptions()
                {
                    Size = ModalSize.ExtraLarge
                };
            var formModal = Modal.Show<AddEdadMesPromedioRe>("Editar Datos", parameters, options);
            var result = await formModal.Result;
            if (result.Cancelled)
            {
                Console.WriteLine("Modal was cancelled");
            }
            else
            {
                await updatePromedios(solicitudSeleccionada.Nrosol);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    async Task agregarRechazo(int id)
    {
        try
        {
            var parameters = new ModalParameters();
            parameters.Add(nameof(AddRechazoRe.Id), id);
            parameters.Add(nameof(AddRechazoRe.nrores), solicitudSeleccionada.Nrosol);
            var options = new ModalOptions()
                {
                    Size = ModalSize.ExtraLarge
                };
            var formModal = Modal.Show<AddRechazoRe>("Editar causal de rechazo", parameters, options);
            var result = await formModal.Result;
            if (result.Cancelled)
            {
                Console.WriteLine("Modal was cancelled");
            }
            else
            {
                await updateRechazos(solicitudSeleccionada.Nrosol);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    async Task deleteRechazo(int id)
    {
        await Http.DeleteAsync($"/api/Resin8/{id}");
        await updateRechazos(solicitudSeleccionada.Nrosol);
    }

    public async Task alertaDeleteRechazo(int id)
    {
        SweetAlertResult result = await Swal.FireAsync(new SweetAlertOptions
            {
                Title = "¿Está seguro?",
                Text = "Se eliminará el causal",
                Icon = SweetAlertIcon.Warning,
                ShowCancelButton = true,
                ConfirmButtonText = "Eliminar",
                CancelButtonText = "Cancelar"
            });

        if (!string.IsNullOrEmpty(result.Value))
        {
            deleteRechazo(id);
            await confirmar();
        }
        else if (result.Dismiss == DismissReason.Cancel)
        {

        }
    }

    private async Task<IEnumerable<Socio>> BusquedaSocios(string searchText)
    {
        return await Task.FromResult(socios.Where(x => x.Nombre.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Solici1>> BusquedaSolicitudes(string searchText)
    {
        var estableposibles = establecimientos.Where(t => t.Codsoc == socioSeleccionado.Scod);
        return await Task.FromResult(solicitudes.Where(x => x.Nrosol.ToString().Contains(searchText) && estableposibles.Any(t => t.Ecod == x.Codest)).ToList());
    }

    private async Task<IEnumerable<Inspect>> BusquedaInspects(string searchText)
    {
        return await Task.FromResult(Inspects.Where(x => x.Nombre.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private async Task<IEnumerable<Plantel>> BusquedaPlanteles(string searchText)
    {
        return await Task.FromResult(Planteles.Where(x => x.Placod.Contains(searchText) && x.Nrocri==socioSeleccionado.Scod).ToList());
    }

}
