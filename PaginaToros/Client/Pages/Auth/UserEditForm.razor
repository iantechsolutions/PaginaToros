@using PaginaToros.Client.Servicios.Contrato
@using Blazored.Typeahead
@inject HttpClient Http
@inject ISocioServicio _socioServicio

<EditForm Context="ctx" Model="@User" OnValidSubmit="@EventCallback">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div style="overflow-y:auto;height:600px">
        <div class="row" style="margin-left:0; margin-right:0;">

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label>Nombre</label>
                    <InputText class="form-control" @bind-Value="User.Names" />
                    <ValidationMessage For="@(()=>User.Names)" />
                </div>

                <div class="form-group mb-3">
                    <label>Apellido</label>
                    <InputText class="form-control" @bind-Value="User.LastNames" />
                    <ValidationMessage For="@(()=>User.LastNames)" />
                </div>

                <div class="form-group mb-3">
                    <label>DNI</label>
                    <InputText class="form-control" @bind-Value="User.Dni" />
                    <ValidationMessage For="@(()=>User.Dni)" />
                </div>

                <div class="form-group mb-3">
                    <label>Teléfono</label>
                    <InputText class="form-control" @bind-Value="User.Phone" />
                    <ValidationMessage For="@(()=>User.Phone)" />
                </div>

                <div class="form-group mb-3">
                    <label>Email</label>
                    <InputText class="form-control" @bind-Value="User.Email" />
                    <ValidationMessage For="@(()=>User.Email)" />
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label>Rol</label>
                    <InputSelect required class="form-control" @bind-Value="User.Rol">
                        <option value=""></option>
                        <option value="Inspector">Inspector</option>
                        @if (oRespuestaRoles?.List == null)
                        {
                            <text>cargando...</text>
                        }
                        else
                        {
                            @foreach (var r in oRespuestaRoles.List)
                            {
                                if (r.Name != "USUARIOMAESTRO")
                                {
                                    <option value="@r.Name">@r.Name</option>
                                }
                            }
                        }
                    </InputSelect>
                </div>

                <div class="form-group mb-3">
                    <label>Estado</label>
                    <InputSelect required class="form-control" @bind-Value="User.Status">
                        <option value="ACTIVO">ACTIVO</option>
                        <option value="SUSPENDIDO">SUSPENDIDO</option>
                    </InputSelect>
                </div>

                <div class="form-group mb-3">
                    <label>Socio</label>
                    <BlazoredTypeahead TItem="SocioDTO" TValue="SocioDTO"
                                       SearchMethod="BusquedaSocios"
                                       placeholder="Buscar por nombre"
                                       ValueChanged="updateSocio"
                                       ValueExpression="@(() => socioSeleccionado)"
                                       EnableDropDown="true">
                        <SelectedTemplate Context="s">@s.Nombre</SelectedTemplate>
                        <ResultTemplate Context="s">@s.Nombre</ResultTemplate>
                    </BlazoredTypeahead>
                    @* SocioId queda guardado en User.SocioId desde updateSocio *@
                </div>

                
            </div>

            <div class="col-12 d-flex gap-2 mt-3">
                <a class="btn btn-info" href="Users">
                    <span class="oi oi-arrow-left" aria-hidden="true"></span> Volver
                </a>
                <button class="btn btn-primary" type="submit">
                    <span class="oi oi-check" aria-hidden="true"></span> Guardar
                </button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public User User { get; set; } = new();
    [Parameter] public EventCallback EventCallback { get; set; }

    Respuesta<List<AspNetRole>>? oRespuestaRoles = new();
    List<SocioDTO> socios = new();
    public SocioDTO? socioSeleccionado = null;

   

    protected override async Task OnInitializedAsync()
    {
        try
        {
            oRespuestaRoles = await Http.GetFromJsonAsync<Respuesta<List<AspNetRole>>>("/api/AspNetRole");
            var rta = await _socioServicio.LimitadosFiltrados(0, 0);
            socios = rta.List;
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    protected Task updateSocio(SocioDTO socio)
    {
        socioSeleccionado = socio;
        User.SocioId = socio.Id;
        return Task.CompletedTask;
    }

    private Task<IEnumerable<SocioDTO>> BusquedaSocios(string searchText)
    {
        var result = socios
            .Where(x => x.Nombre.Contains(searchText ?? string.Empty, StringComparison.OrdinalIgnoreCase))
            .ToList();
        return Task.FromResult<IEnumerable<SocioDTO>>(result);
    }
}
