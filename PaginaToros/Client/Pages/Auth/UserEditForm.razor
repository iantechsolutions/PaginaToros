@using PaginaToros.Client.Servicios.Contrato;
@using Blazored.Typeahead
@inject HttpClient Http
@inject ISocioServicio _socioServicio
<EditForm Context="myContext" Model="@User" OnValidSubmit="@EventCallback">
    <div style="overflow-y: auto; max-height: 63.33%;">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="row" style="margin-left:0; margin-right:0;">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label>Nombres:</label>
                    <InputText required class="form-control" @bind-Value="User.Names" />
                </div>

                <div class="form-group mb-3">
                    <label>Apellidos:</label>
                    <InputText required class="form-control" @bind-Value="User.LastNames" />
                </div>

                <div class="form-group mb-3">
                    <label>Dni:</label>
                    <InputText required class="form-control" @bind-Value="User.Dni" />
                </div>

                <div class="form-group mb-3">
                    <label>Télefono:</label>
                    <InputText required class="form-control" @bind-Value="User.Phone" />
                </div>

                <div class="form-group mb-3">
                    <label>Socio</label>
                    <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Buscar por nombre" EnableDropDown="true" @bind-Value="socioSeleccionado">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Nombre
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Nombre
                        </ResultTemplate>
                    </BlazoredTypeahead>
                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label>Email:</label>
                    <InputText class="form-control" @bind-Value="User.Email" />
                </div>

                <div class="form-group mb-3">
                    <label>Posición:</label>
                    <InputSelect required class="form-control" @bind-Value="User.Rol">
                        <option value=""></option>
                        <option value="Socio">Socio</option>
                        <option value="Inspector">Inspector</option>

                        @if (oRespuestaRoles == null || oRespuestaRoles.List == null)
                        {
                            <text>cargando...</text>
                        }
                        else
                        {

                            @foreach (var oElement in oRespuestaRoles.List)
                            {
                                if (oElement.Name != "USUARIOMAESTRO")
                                {
                                    <option value="@oElement.Name">@oElement.Name</option>
                                }
                            }
                        }
                    </InputSelect>
                </div>

                <div class="form-group mb-3">
                    <label>Estado:</label>
                    <InputSelect required class="form-control" @bind-Value="User.Status">
                        <option value="ACTIVO">ACTIVO</option>
                        <option value="SUSPENDIDO">SUSPENDIDO</option>
                    </InputSelect>
                </div>

            </div>
            <a class="btn btn-info" href="Users">
                <span class="oi oi-arrow-left" aria-hidden="true"></span> Volver
            </a> 
            <button class="btn btn-primary" type="submit">
                <span class="oi oi-check" aria-hidden="true"></span> Guardar
            </button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public User User { get; set; }
    [Parameter] public EventCallback EventCallback { get; set; }
    Respuesta<List<AspNetRole>> oRespuestaRoles = new Respuesta<List<AspNetRole>>();
    List<SocioDTO> socios = new();
    SocioDTO socioSeleccionado = null;
    string Url = "/api/AspNetRole";
    protected override async Task OnInitializedAsync()
    {

        //UserName = user.Identity.Name;

        oRespuestaRoles = await Http.GetFromJsonAsync<Respuesta<List<AspNetRole>>>(Url);

        var rta = await _socioServicio.LimitadosFiltrados(0,0);
        socios = rta.List;

    }

    private async Task<IEnumerable<SocioDTO>> BusquedaSocios(string searchText)
    {
        var result = socios.Where(x => x.Nombre.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();
        return await Task.FromResult(result);
    }

}
