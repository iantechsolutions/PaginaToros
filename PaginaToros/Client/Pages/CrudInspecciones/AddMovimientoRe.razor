@using Blazored.Typeahead
<style>
    .bm-title{
        font-size:25px;
        font-weight: bold;
    }
</style>
<div class="card" >
    <div class="card-body">
        <EditForm Model="@oResin3" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <div class="row" style="width=100%;">
                <div class="col-sm-5">
                    <RadzenDropDown @bind-Value=@movimiento Placeholder="Seleccione el movimiento" Data=@movimientos Style="width: 100%; max-width: 400px;" />
                </div>
                <div class="col-sm-2"/>
                <div class="col-sm-5">
                    <RadzenDropDown @bind-Value=@motivo Placeholder="Seleccione el motivo" Data=@motivos Style="width: 100%; max-width: 400px;" />
                </div>
            </div>
            <br/>
            <div class="row" style="width=100%;">
                <div class="col-sm-3" />
                <div class="col-sm-6" >
                    <RadzenText TextStyle="TextStyle.H5" Style="background:#008000;color:white;text-align:center">PURO REGISTRADO</RadzenText>
                </div>
                <div class="col-sm-3" />
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm-4">
                    <label>Vacas</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rdvac Style="width: 100%; max-width: 400px;" />
                </div>
                <div class="col-sm-4">
                    <label>Vaquillonas c/Servicio:</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rdvaqcs Style="width: 100%; max-width: 400px;" />
                </div>
                <div class="col-sm-4">
                    <label>Vaquillonas sin servicio</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rdvaqss Style="width: 100%; max-width: 400px;" />
                </div>
            </div>
            <br/>
            <br/>
            <div class="row" style="width=100%;">
                <div class="col-sm-3" />
                <div class="col-sm-6">
                    <RadzenText TextStyle="TextStyle.H5" Style="background:#008000;color:white;text-align:center">VIP</RadzenText>
                </div>
                <div class="col-sm-3" />
            </div>
            <br/>
            <div class="row" style="width=100%;">
                <div class="col-sm-4">
                    <label>Vacas</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rpvac Style="width: 100%; max-width: 400px;" />
                </div>
                <div class="col-sm-4">
                    <label>Vaquillonas sin servicio o preñadas</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rpvaqcs Style="width: 100%; max-width: 400px;" />
                </div>
                <div class="col-sm-4">
                    <label>Vaquillonas con servicio</label>
                    <RadzenNumeric @bind-Value=@oResin3.Rpvaqss Style="width: 100%; max-width: 400px;" />
                </div>
            </div>

            <br />
            <br />
            <button type="submit" class="btn btn-primary mr-2">Aceptar</button>
            <button type="button" @onclick="cancel" class="btn btn-light">Cancelar</button>
        </EditForm>
    </div>
</div>
@code {
    Resin3 oResin3 = new();
    Respuesta<Resin3> oRespuesta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int Id { get; set; }
    [Parameter] public string numeroRes { get; set; }
    List<string> movimientos = new List<string> { "Entrada","Salida"};
    string movimiento = "";
    List<string> motivos = new List<string> { "Compras", "Ventas", "Cambio Categoria", "Por Inspeccion", "Epidemias", "Rechazos", "Otros", /* rest of elements */ };
    string motivo = "";
    Dictionary<string, string> traductorMotivos = new Dictionary<string, string>{
        {"Compras","CO"},
        {"Ventas","VE"},
        {"Cambio Categoria","CC"},
        {"Por Inspeccion","PI"},
        {"Epidemias","EP"},
        {"Rechazos","RE"},
        {"Otros","OT"}
    };

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            try
            {
                oRespuesta = await Http.GetFromJsonAsync<Respuesta<Resin3>>($"/api/Resin3/{Id}");
                oResin3 = oRespuesta.List;

            }
            catch (Exception ex)
            {
                oRespuesta.Mensaje = ex.Message;
            }
        }
    }
    async Task Guardar()
    {
        oResin3.Nrores = numeroRes;
        oResin3.Tipmov = movimiento.Substring(0, 1);
        oResin3.Ctomov = traductorMotivos[motivo];
        if (Id == 0)
        {
            await Http.PostAsJsonAsync<Resin3>("/api/Resin3", oResin3);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await Http.PutAsJsonAsync<Resin3>("/api/Resin3", oResin3);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }
}
