    @using PaginaToros.Shared.Models
@using PaginaToros.Shared.Models.Response
@using PaginaToros.Client.Servicios.Contrato

@inject ISocioServicio _socioServicio
@inject IEstableServicio _estableServicio
<style>
    .blink {
        text-align: center;
    }

    status {
        animation: blink 2s linear infinite;
    }

    @@keyframes blink {
        0% {
            opacity: 0;
        }

        50% {
            opacity: .5;
        }

        100% {
            opacity: 1;
        }
    }
</style>

<RadzenRow>
    <RadzenColumn Size="4" SizeMD="6" SizeLG="3">
        <div class="blink">
            Estado: @if (activo)
            {
                <status style="color:green;">Activo</status>
            }
            else
            {
                <status style="color:red;">Inactivo</status>

            }
        </div>
    </RadzenColumn>

</RadzenRow>
<RadzenRow Gap="1rem">
    <RadzenColumn Size="4" SizeMD="4" SizeLG="4">
        <RadzenCard Variant="Variant.Filled" Class="rz-my-2 rz-mx-0">
            <RadzenText>Establecimientos</RadzenText>
            <br/>
            <RadzenDataList AllowVirtualization="false"
                            WrapItems="true" AllowPaging="false"
                            Data="@establecimientos" TItem="EstableDTO" PageSize="3" PagerHorizontalAlign="HorizontalAlign.Left" ShowPagingSummary="true">
                <Template Context="data">
                    <RadzenColumn Size="6" class="rz-p-0 rz-p-md-0">
                        <RadzenCard Style="@(data.Activo=="S"?"background-color: rgba(45, 255, 125, 0.5);":"background-color: rgba(255, 55, 46, 0.5);")">
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Nombre</RadzenText>
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H4" class="rz-display-flex rz-mt-0 rz-my-0">@data.Nombre</RadzenText>

                            <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Provincia</RadzenText>
                            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H4" class="rz-display-flex rz-mt-0 rz-my-0">
                                @(traductorProvincia.TryGetValue(data.Codpro ?? "", out var prov) ? prov : "Provincia desconocida")
                            </RadzenText>
                        </RadzenCard>
                    </RadzenColumn>
                </Template>
            </RadzenDataList>
                <br />

            </RadzenCard>
        </RadzenColumn>
        <RadzenColumn>
            <RadzenCard Variant="Variant.Filled" Class="rz-my-2 rz-mx-0">
                <RadzenText>Info socio</RadzenText>
                <br />
                
               
                <RadzenRow class="rz-text-align-center " Gap="3rem">
                    <RadzenColumn Size="4" >
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Nombre</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Prenom @socioDet.Nombre @socioDet.Posnom</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Telefono</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Telefo1</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Plantel</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Placod</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Mail</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">
                            @(traductorProvincia.TryGetValue(socioDet.Codpro1 ?? "", out var provSoc) ? provSoc : "Provincia desconocida")
                        </RadzenText>

                    </RadzenColumn>
                    <RadzenColumn >
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Domicilio</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Direcc1</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Localidad</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Locali1</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Codigo Postal</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Codpos1</RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-0 rz-my-0">Provincia</RadzenText>
                        <RadzenText TextStyle="TextStyle.H6" TagName="TagName.H1" class="rz-display-flex rz-mt-0 rz-my-0">@socioDet.Mail</RadzenText>
                    </RadzenColumn>
                    
                </RadzenRow>


            </RadzenCard>
        </RadzenColumn>
    </RadzenRow>
   


@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public string Cod { get; set; } = "";

    SocioDTO socioDet = new();
    List<EstableDTO> establecimientos = new();
    bool activo;



    Dictionary<string, string> traductorProvincia = new()
    {
        {"01","Chaco"},{"02","Corrientes"},{"03","Entre Rios"},{"04","Santa Fe"},{"05","Cordoba"},
        {"06","La pampa"},{"07","San Luis"},{"08","Santa Cruz"},{"09","Tierra del fuego"},{"10","Chubut"},
        {"11","Neuquen"},{"12","Rio negro"},{"13","Buenos Aires"},{"14","Capital Federal"},{"15","Catamarca"},
        {"16","Formosa"},{"17","Jujuy"},{"18","La rioja"},{"19","Mendoza"},{"20","Misiones"},{"21","Salta"},
        {"22","San Juan"},{"23","Santiago Del Estero"},{"24","Tucuman"},{"",""}
    };


    protected override async Task OnParametersSetAsync()
    {
        if (Id <= 0) return;

        try
        {
            var socioResp = await _socioServicio.LimitadosFiltradoTodos(
                skip: 0,
                take: 1,
                expression: $"Id == {Id}");

            socioDet = socioResp?.List?.FirstOrDefault() ?? new SocioDTO();

            var estabResp = await _estableServicio.GetBySocioId(Id);
            establecimientos = estabResp?.List ?? new List<EstableDTO>();

            // 3) Estado
            activo = (socioDet?.Criador == "S");

            StateHasChanged();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"[InfoSocio] Error: {ex}");
            socioDet = new SocioDTO();
            establecimientos = new List<EstableDTO>();
        }
    }

    
}