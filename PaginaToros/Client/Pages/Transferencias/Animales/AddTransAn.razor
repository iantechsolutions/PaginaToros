@using Blazored.Typeahead
@using PaginaToros.Client.Servicios.Contrato;
@inject ISocioServicio _sociosServicio
@inject ITransanServicio _transanServicio
@inject IPlantelServicio _plantelServicio
<style>
    .bm-title {
        font-size: 25px;
        font-weight: bold;
    }
</style>
<div class="card">
    <div class="card-body">
        <EditForm Model="@oTransan" OnValidSubmit="Guardar">
            <DataAnnotationsValidator />
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label class="col-sm">Nro Certificado</label>
                    <InputText @bind-Value="@oTransan.NroCert" class="form-control" placeholder=""></InputText>
                    <ValidationMessage For="(()=> oTransan.NroCert)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label>Fecha de venta</label><br />
                    <RadzenDatePicker TValue="DateTime?" @bind-Value="@oTransan.Fecvta" ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label>Socio Vendedor</label><br />
                    <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Buscar por nombre" EnableDropDown="true" @bind-Value="socioVendedor">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Nombre
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Nombre
                        </ResultTemplate>
                    </BlazoredTypeahead>
                </div>
                <div class="col-sm">
                    <label class="col-sm">Socio Comprador</label>
                    <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Buscar por nombre" EnableDropDown="true" @bind-Value="socioComprador">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Nombre
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Nombre
                        </ResultTemplate>
                    </BlazoredTypeahead>
                </div>
            </div>
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label class="col-sm">Hembras</label>
                    <InputNumber @bind-Value="@oTransan.CantHem" class="form-control" placeholder=""></InputNumber>
                    <ValidationMessage For="(()=> oTransan.CantHem)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Machos</label>
                    <InputNumber @bind-Value="@oTransan.CantMach" class="form-control" placeholder=""></InputNumber>
                    <ValidationMessage For="(()=> oTransan.CantMach)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Crias Hembras</label>
                    <InputNumber @bind-Value="@oTransan.CantChem" class="form-control" placeholder=""></InputNumber>
                    <ValidationMessage For="(()=> oTransan.CantChem)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Crias Machos</label>
                    <InputNumber @bind-Value="@oTransan.CantCmach" class="form-control" placeholder=""></InputNumber>
                    <ValidationMessage For="(()=> oTransan.CantCmach)" style="color:red;" />
                </div>
            </div>
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label>Plantel Origen</label>
                    <BlazoredTypeahead SearchMethod="BusquedaPlantelesVendedor" style="max-width:26.7%" placeholder="Busque plantel por numero" EnableDropDown="true" @bind-Value="plantelOrigen">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Placod
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Placod
                        </ResultTemplate>
                    </BlazoredTypeahead>
                </div>
                <div class="col-sm">
                    <label>Plantel Destino</label>
                    <BlazoredTypeahead SearchMethod="BusquedaPlantelesComprador" style="max-width:26.7%" placeholder="Busque plantel por numero" EnableDropDown="true" @bind-Value="plantelDestino">
                        <SelectedTemplate Context="eleccion">
                            @eleccion.Placod
                        </SelectedTemplate>
                        <ResultTemplate Context="eleccion">
                            @eleccion.Placod
                        </ResultTemplate>
                    </BlazoredTypeahead>
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label class="col-sm">Tipo de Hembras</label>
                    <RadzenDropDown @bind-Value=@oTransan.Tipohem Data=@tiposHembra Style="width: 100%; max-width: 400px;" />
                    <ValidationMessage For="(()=> oTransan.Tipohem)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Tipo de Hacienda</label>
                    <RadzenDropDown @bind-Value=@temp1 Data=@tiposHacienda Style="width: 100%; max-width: 400px;" />
                    <ValidationMessage For="(()=> temp1)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Sexo de los Animales</label>
                    <RadzenDropDown @bind-Value=@temp2 Data=@sexoAnimales Style="width: 100%; max-width: 400px;" />
                    <ValidationMessage For="(()=> temp2)" style="color:red;" />
                </div>
            </div>
            <br />
            <div class="row" style="width=100%;">
                <div class="col-sm">
                    <label class="col-sm">Estado de las Hembras</label>
                    <RadzenDropDown @bind-Value=@temp3 Data=@estadoHembras Style="width: 100%; max-width: 400px;" />
                    <ValidationMessage For="(()=> temp3)" style="color:red;" />
                </div>
                <div class="col-sm">
                    <label class="col-sm">Animales a Incorporar?</label>
                    <RadzenDropDown @bind-Value=@temp4 Data=@incorporar Style="width: 100%; max-width: 400px;" />
                    <ValidationMessage For="(()=> temp4)" style="color:red;" />
                </div>
            </div>
            <br />
            <br />

            <button type="submit" class="btn btn-primary mr-2">Aceptar</button>
            <button type="button" @onclick="cancel" class="btn btn-light">Cancelar</button>
        </EditForm>
    </div>
</div>
@code {
    TransanDTO oTransan = new();
    SocioDTO socioComprador = new();
    SocioDTO socioVendedor = new();
    List<SocioDTO> socios = new();
    List<PlantelDTO> Planteles = new();
    List<string> tiposHembra = new List<string> { "VQ", "VA" };
    List<string> tiposHacienda = new List<string> { "PHPR (Puro Registrado)", "HPR (Puro Registrado)", "PHVIP (VIP)", "HVIP (VIP)" };
    List<string> sexoAnimales = new List<string> { "Hembras", "Machos" };
    List<string> estadoHembras = new List<string> { "Con Cria (CC)", "Con Cria y Preñada (CCP)", "Sin Servicio (SS)", "Preñada (PR)" };
    List<string> incorporar = new List<string> { "NO", "SI" };
    string temp1 = "";
    string temp2 = "";
    string temp3 = "";
    string temp4 = "";
    PlantelDTO plantelOrigen = new();
    PlantelDTO plantelDestino = new();
    Dictionary<string, string> traductor = new Dictionary<string, string>{
        {"PHPR (Puro Registrado)","PHPR"},
        {"HPR (Puro Registrado)","HPR"},
        {"PHVIP (VIP)","PHVIP"},
        {"HVIP (VIP)","HVIP"},
        {"Machos","M"},
        {"Hembras","H"},
        {"Con Cria (CC)","CC"},
        {"Con Cria y Preñada (CCP)","CCP"},
        {"Sin Servicio (SS)","SS"},
        {"Preñada (PR)","PR"},
        {"NO","0"},
        {"SI","1"}
    };
    Dictionary<string, string> traductorCarga = new Dictionary<string, string>{
        {"PHPR","PHPR (Puro Registrado)"},
        {"HPR","HPR (Puro Registrado)"},
        {"PHVIP","PHVIP (VIP)"},
        {"HVIP","HVIP (VIP)"},
        {"M","Machos"},
        {"H","Hembras"},
        {"CC","Con Cria (CC)"},
        {"CCP","Con Cria y Preñada (CCP)"},
        {"SS","Sin Servicio (SS)"},
        {"PR","Preñada (PR)"},
        {"0","NO"},
        {"1","SI"}
    };

    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var rta = await _sociosServicio.Lista(0, 1000000);
        socios = rta.List;
        var rt = await _plantelServicio.Lista(0, 1000000);
        Planteles = rt.List;
        if (Id != 0)
        {
            try
            {
                var r = await _transanServicio.Lista(0,1000000);
                oTransan = r.List.Where(x=>x.Id==Id).FirstOrDefault();
                socioComprador = socios.Where(x => x.Scod == oTransan.Scom).First();
                socioVendedor = socios.Where(x => x.Scod == oTransan.Sven).First();
                plantelOrigen = Planteles.Where(x => x.Placod == oTransan.Plant).First();
                plantelDestino = Planteles.Where(x => x.Placod == oTransan.NvoPla).First();
                temp1 = traductorCarga[oTransan.Tiphac];
                temp2 = traductorCarga[oTransan.Tipani];
                temp3 = traductorCarga[oTransan.Hemsta];
                temp4 = traductorCarga[oTransan.Incorp.ToString()];
            }
            catch (Exception ex)
            {
            }
        }
    }
    async Task Guardar()
    {
        oTransan.Tiphac = traductor[temp1];
        oTransan.Tipani = traductor[temp2];
        oTransan.Hemsta = traductor[temp3];
        oTransan.Incorp = Convert.ToSByte(traductor[temp4]);
        oTransan.Vnom = socioVendedor.Nombre;
        oTransan.Cnom = socioComprador.Nombre;
        oTransan.Sven = socioVendedor.Scod.ToString();
        oTransan.Scom = socioComprador.Scod.ToString();
        oTransan.Plant = plantelOrigen.Placod;
        oTransan.NvoPla = plantelDestino.Placod;

        if (Id == 0)
        {
            await _transanServicio.Crear(oTransan);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await _transanServicio.Editar(oTransan);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }

    private async Task<IEnumerable<SocioDTO>> BusquedaSocios(string searchText)
    {
        var result = socios.Where(x => x.Nombre.Contains(searchText, StringComparison.OrdinalIgnoreCase)).ToList();
        return await Task.FromResult(result);
    }

    private async Task<IEnumerable<PlantelDTO>> BusquedaPlantelesComprador(string searchText)
    {
        return await Task.FromResult(Planteles.Where(x => x.Placod.Contains(searchText) && x.Nrocri == socioComprador.Scod).ToList());
    }

    private async Task<IEnumerable<PlantelDTO>> BusquedaPlantelesVendedor(string searchText)
    {
        return await Task.FromResult(Planteles.Where(x => x.Placod.Contains(searchText) && x.Nrocri == socioVendedor.Scod).ToList());
    }

}
