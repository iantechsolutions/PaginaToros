<h3>Inspector id nro° @id</h3>

<RadzenCard Class="m-3">
    <div class="row">
        <h4><strong>@oInspector.Nombre</strong></h4>
        <div class="col-md-6 col-xl-6">
            <div class="d-flex flex-row p-3">
                <div>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Provincia</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@traductorProvincia[oInspector.Codpro]</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Localidad</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInspector.Locali</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-1 mb-0">Direccion</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInspector.Direcc</b></RadzenText>
                </div>
            </div>
        </div>
        <div class="col-md-6 col-xl-6">
            <div class="d-flex flex-row p-3">
                <div>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Codigo Postal</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInspector.Codpos</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Telefono</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInspector.Telefo</b></RadzenText>
                    <RadzenText TextStyle="TextStyle.Overline" Class="d-flex mt-3 mb-0">Mail</RadzenText>
                    <RadzenText TextStyle="TextStyle.Body1"><b>@oInspector.Mail</b></RadzenText>
                </div>
            </div>
        </div>
    </div>

</RadzenCard>

@code {
    Inspect oInspector = new();
    Respuesta<Inspect> oRta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int id { get; set; }

    Dictionary<string, string> traductorProvincia = new Dictionary<string, string>
    {
        {"01", "Chaco"},
        {"02", "Corrientes"},
        {"03", "Entre Rios"},
        {"04", "Santa Fe"},
        {"05", "Cordoba"},
        {"06", "La pampa"},
        {"07", "San Luis"},
        {"08", "Santa Cruz"},
        {"09", "Tierra del fuego"},
        {"10", "Chubut"},
        {"11", "Neuquen"},
        {"12", "Rio negro"},
        {"13", "Buenos Aires"},
        {"14", "Capital Federal"},
        {"15", "Catamarca"},
        {"16", "Formosa"},
        {"17", "Jujuy"},
        {"18", "La rioja"},
        {"19", "Mendoza"},
        {"20", "Misiones"},
        {"21", "Salta"},
        {"22", "San Juan"},
        {"23", "Santiago Del Estero"},
        {"24", "Tucuman"},
        {"",""}
    };

    protected override async Task OnInitializedAsync()
    {
        if (id != 0)
        {
            oRta = await Http.GetFromJsonAsync<Respuesta<Inspect>>($"/api/Inspect/{id}");
            oInspector = oRta.List;
        }
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }

}

