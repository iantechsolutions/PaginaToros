@page "/reporteprint/{opcion:int}"
@* COMO NO SE PUEDE MANDAR STRING MANDAMOS INT, 1 ES TOROS, 0 ES CERTIFICADOS *@
@using PaginaToros.Client.Servicios.Contrato;
@inject ISocioServicio _socioServicio
@inject ITorosServicio _torosServicio
@inject ICertifsemanServicio _certifsemanServicio
@inject IJSRuntime js
@using Blazored.Typeahead;
<div class="todo">
<br/>

@if (opcion == 1)
{
    <center><RadzenText TextStyle="TextStyle.H4">Toros del Criador</RadzenText></center>
}
@if (opcion == 0)
{
    <center><RadzenText TextStyle="TextStyle.H4">Certificados del Criador</RadzenText></center>
}
<div class="row no-print">
    <div class="col-sm-3"/> 
    <div class="col-sm-6">
    <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Seleccione el socio" EnableDropDown="true" @bind-Value="socioSeleccionado">
        <SelectedTemplate Context="eleccion">
            @eleccion.Nombre
        </SelectedTemplate>
        <ResultTemplate Context="eleccion">
            @eleccion.Nombre
        </ResultTemplate>
    </BlazoredTypeahead>
    </div>
    <div class="col-sm-2" style="width:10%;position:relative;left:2%">
        <button class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;width:80%" @onclick="()=>Generate()">Buscar</button>
    </div>
    <div class="col-sm-1">
        <button style="outline:none; float: right;margin-right:3%;height:100%;" class="no-print px-3 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" @onclick="() => Print()"><FeatherPrinter Color="Black"></FeatherPrinter></button>
    </div>
</div>
@if(socioSeleccionado!=null && terminado){
    <div style="justify-content: center; align-items: center;">
        <RadzenText TextStyle="TextStyle.Body2">Nombre del socio: @socioSeleccionado.Nombre</RadzenText>
        <RadzenText TextStyle="TextStyle.Body2">Fecha de impresion: @DateTime.Now.ToString("dd/MM/yyyy")</RadzenText>
        
            @if (opcion == 1)
            {
                <table style="border-collapse:collapse;position:relative;left:3%" cellspacing="0">
                <tr>
                    <td>
                        <p class="s2">HBA</p>
                    </td>
                    <td>
                        <p class="s2">Tatuaje</p>
                    </td>
                    <td>
                        <p class="s2">Var</p>
                    </td>
                    <td>
                        <p class="s2">Nacido</p>
                    </td>
                    <td>
                        <p class="s2">Nombre Toro</p>
                    </td>
                    <td>
                        <p class="s2">Es Padre Desde</p>
                    </td>
                    <td>
                        <p class="s2">Estado</p>
                    </td>
                    <td>
                        <p class="s2">-Actual?-</p>
                    </td>
                    <td>
                        <p class="s2">Tipo de Toro</p>
                    </td>
                </tr>
                @foreach(var toro in toros)
                {
                    <tr>
                        <td>
                            <p>@toro.Hba</p>
                        </td>
                        <td>
                            <p>@toro.Tatpart</p>
                        </td>
                        <td>
                            <p>@toro.Variedad</p>
                        </td>
                        <td>
                            @if(toro.Nacido.HasValue){
                                <p>@toro.Nacido.Value.ToString("dd/MM/yyyy")</p>
                            }
                            else{
                                <p></p>
                            }
                        </td>
                        <td>
                            <p>@toro.NomDad</p>
                        </td>
                        <td>
                            <p></p>
                        </td>
                        <td>
                            <p>@traductor[toro.CodEstado]</p>
                        </td>
                        <td>
                            <p></p>
                        </td>
                        <td>
                            <p>@traductor[toro.TipToro]</p>
                        </td>
                    </tr>

                }
                </table>
            }
            @if (opcion == 0)
            {<table style="border-collapse:collapse;position:relative;left:10%" cellspacing="0">
                <tr>
                    <td>
                        <p class="s2">Nro Certificado</p>
                    </td>
                    <td>
                        <p class="s2">Tipo de Certif</p>
                    </td>
                    <td>
                        <p class="s2">Fecha de venta</p>
                    </td>
                    <td>
                        <p class="s2">HBA</p>
                    </td>
                    <td>
                        <p class="s2">Tatuaje</p>
                    </td>
                    <td>
                        <p class="s2">Nro de Dosis Orig</p>
                    </td>
                    <td>
                        <p class="s2">Nro de Dosis Remanen</p>
                    </td>
                    <td>
                        <p class="s2">Real</p>
                    </td>
                </tr>
                @foreach(var certificado in certificados)
                {
                    <tr>
                        <td>
                            <p>@certificado.NroCert</p>
                        </td>
                        <td>
                            <p>@certificado.TipoCert</p>
                        </td>
                        <td>
                            @if (certificado.Fecvta.HasValue)
                            {
                                <p>@certificado.Fecvta.Value.ToString("dd/MM/yyyy")</p>
                            }
                            else{
                                <p></p>
                            }
                        </td>
                        <td>
                            <p>@certificado.Hba</p>
                        </td>
                        <td>
                            <p>@certificado.Tatpart</p>
                        </td>
                        <td>
                            <p>@certificado.NrDosiOr</p>
                        </td>
                        <td>
                            <p>@certificado.NrDosi</p>
                        </td>
                        <td>
                            <p></p>
                        </td>
                    </tr>
                }
                </table>
            }
        
    </div>
}
else if (seleccion && !terminado)
{
    <br/>
    <center>
        <div class="mb-2">
            <br />
            <RadzenProgressBar style="position:relative" Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Primary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}
</div>
@code {
    [Parameter] public int opcion { get; set; }
    SocioDTO socioSeleccionado = null;
    List<SocioDTO> socios = new();
    bool terminado = false;
    bool seleccion = false;
    List<TorosuniDTO> toros = new();
    List<CertifsemanDTO> certificados = new();
    Dictionary<string, string> traductor = new Dictionary<string, string>{
        {"P","Puro Pedigree (SRA)"},
        {"S","S/"},
        {"A","Patagonico"},
        {"GP","Ganador de prueba"},
        {"1","Activo"},
        {"2","Inactivo"},
        {"3","Inexistente"},
        {"4","Muerto"},
        {"5","Vendido"}
    };
    protected override async Task OnInitializedAsync()
    {
        var rta = await _socioServicio.LimitadosFiltrados(0, 0);
        socios = rta.List;
    }
    private async Task<IEnumerable<SocioDTO>> BusquedaSocios(string searchText)
    {
        return await Task.FromResult(socios.Where(x => x.Nombre.ToLower().Contains(searchText.ToLower())).ToList());
    }
    private async Task Generate()
    {
        var coso = socioSeleccionado;
        seleccion = true;
        if (opcion == 1)
        {
            string filtro = $"(Criador == null ? \"\" : Criador).ToLower().Contains(\"{socioSeleccionado.Scod}\".ToLower())";
            var rtaa = await _torosServicio.LimitadosFiltradosNoInclude(0, 0,filtro);
            toros = rtaa.List.Where(x=>x.CodEstado!="4").ToList();
        }
        else if (opcion == 0)
        {
            string filtro = $"(Nrocri == null ? \"\" : Nrocri).ToLower().Contains(\"{socioSeleccionado.Scod}\".ToLower())";
            var rtaa = await _certifsemanServicio.LimitadosFiltradosNoInclude(0, 0,filtro);
            certificados = rtaa.List;
        }
        terminado = true;
    }
    private async Task Print()
        => await js.InvokeVoidAsync("window.print");

}
