@page "/reporteprint/{opcion:int}"
@* COMO NO SE PUEDE MANDAR STRING MANDAMOS INT, 1 ES TOROS, 0 ES CERTIFICADOS *@
@using PaginaToros.Client.Servicios.Contrato;
@inject ISocioServicio _socioServicio
@inject ITorosServicio _torosServicio
@inject ICertifsemanServicio _certifsemanServicio
@inject IJSRuntime js
@using Blazored.Typeahead;

<style>
    @@mediá print{
        @@page{
            margin:0
        }
    }
    body {
        margin-left: 0;
        margin-right: 0;
    }

    .body {
        margin-left: 0;
        margin-right: 0;
    }
</style>



<br/>
@if (opcion == 1)
{
    <center ><RadzenText TextStyle="TextStyle.H5">Toros del Criador</RadzenText></center>
}
@if (opcion == 0)
{
    <center><RadzenText TextStyle="TextStyle.H5">Certificados del Criador</RadzenText></center>
}
<div class="no-print">
    <br/>
<div class="row">
    <div class="col-sm-3"/> 
    <div class="col-sm-6">
            <BlazoredTypeahead SearchMethod="BusquedaSocios" placeholder="Seleccione el socio" EnableDropDown="true" @bind-Value="socioSeleccionado" Disabled="seleccion">
        <SelectedTemplate Context="eleccion">
            @eleccion.Nombre
        </SelectedTemplate>
        <ResultTemplate Context="eleccion">
            @eleccion.Nombre
        </ResultTemplate>
    </BlazoredTypeahead>
    </div>
    <div class="col-sm-2" style="width:10%;position:relative;left:2%">
        <button class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;width:80%" @onclick="()=>Generate()">Buscar</button>
    </div>
    <div class="col-sm-1">
        <button style="outline:none; float: right;margin-right:3%;height:100%;" class="px-3 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" @onclick="() => Print()"><FeatherPrinter Color="Black"></FeatherPrinter></button>
    </div>
</div>

</div>
@if(socioSeleccionado!=null && terminado && opcion == 1){
    <div class="cuerpo">
        <RadzenText TextStyle="TextStyle.Body2">Nombre del socio: @socioSeleccionado.Nombre</RadzenText>
        <RadzenText TextStyle="TextStyle.Body2">Fecha de impresion: @DateTime.Now.ToString("dd/MM/yyyy")</RadzenText>
            <table style="border-collapse:collapse;position:relative; font-size: 8px!important;width:700px" cellspacing="0">
                <tr style="white-space: nowrap;">
                <td width="10%">
                    <p class="s2">HBA</p>
                </td>
                <td width="10%">
                    <p class="s2">Tatuaje</p>
                </td>
                <td width="10%">
                    <p class="s2">Var</p>
                </td>
                <td width="10%">
                    <p class="s2">Nacido</p>
                </td>
                <td width="15%">
                    <p class="s2">Nombre Toro</p>
                </td>
                <td width="10%">
                    <p class="s2">Es Padre Desde</p>
                </td>
                <td width="10%">
                    <p class="s2">Estado</p>
                </td>
                <td width="10%">
                    <p class="s2">-Actual?-</p>
                </td>
                <td width="15%">
                    <p class="s2">Tipo de Toro</p>
                </td>
            </tr>
            @foreach(var toro in toros.Where(x=>x.CodEstado=="1"))
            {
                <tr>
                    <td>
                        <p class="s2">@toro.Hba</p>
                    </td>
                    <td>
                        <p class="s2">@toro.Tatpart</p>
                    </td>
                    <td>
                        <p class="s2">@toro.Variedad</p>
                    </td>
                    <td>
                        @if(toro.Nacido.HasValue){
                            <p class="s2">@toro.Nacido.Value.ToString("dd/MM/yyyy")</p>
                        }
                        else{
                            <p class="s2"></p>
                        }
                    </td>
                    <td>
                        <p class="s2">@toro.NomDad</p>
                    </td>
                    <td>
                        <p class="s2"></p>
                    </td>
                    <td>
                        <p class="s2">@traductor[toro.CodEstado]</p>
                    </td>
                    <td>
                        <p class="s2"></p>
                    </td>
                    <td>
                        <p class="s2" style="font-size:6pt">@traductor[toro.TipToro]</p>
                    </td>
                </tr>

            }
            </table>  
    </div>
}
else if (opcion == 0 && socioSeleccionado != null && terminado)
{
    <div class="cuerpo">
    <RadzenText TextStyle="TextStyle.Body2">Nombre del socio: @socioSeleccionado.Nombre</RadzenText>
    <RadzenText TextStyle="TextStyle.Body2">Fecha de impresion: @DateTime.Now.ToString("dd/MM/yyyy")</RadzenText>
        <table style="border-collapse:collapse;position:relative; font-size: 8px!important;width:700px" cellspacing="0">
            <tr style="white-space:nowrap">
                    <td>
                        <p class="s2">Tipo cert.</p>
                    </td>
                    <td>
                        <p class="s2">Nro cert.</p>
                    </td>
                    <td>
                        <p class="s2">Fecha de venta</p>
                    </td>
                    <td>
                        <p class="s2">Socio</p>
                    </td>
                    <td>
                        <p class="s2">Tatuaje</p>
                    </td>
                    <td>
                        <p class="s2">HBA</p>
                    </td>
                    <td>
                        <p class="s2">Nombre</p>
                    </td>
                    <td>
                        <p class="s2">Cant Dosis</p>
                    </td>
                    <td>
                        <p class="s2">Cant Dosis Reman</p>
                    </td>
                    <td>
                        <p class="s2">Variedad</p>
                    </td>

                </tr>
                @foreach (var cer in certificados.Where(x=>x.NrDosi>0))
                {
                <tr style="font-size: 5px!important;">
                        <td>
                        <p class ="s2">@cer.TipoCert.ToUpper()</p>
                        </td>
                        <td>
                        <p class="s2">@cer.NroCert</p>
                        </td>
                        <td>
                            @if (cer.Fecvta.HasValue)
                            {
                                <p class="s2">@cer.Fecvta.Value.ToString("dd/MM/yyyy")</p>
                            }
                            else
                            {
                                <p></p>
                            }
                        </td>
                        <td>
                        <p class="s2">@cer.Socio.Nombre</p>
                        </td>
                        <td>
                        <p class="s2">@cer.Tatpart</p>
                        </td>
                        <td>
                        <p class="s2">@cer.Hba</p>
                        </td>
                        <td>
                        <p class="s2">@cer.NomDad</p>
                        </td>
                        <td>
                        <p class="s2">@cer.NrDosiOr</p>
                        </td>
                        <td>
                        <p class="s2">@cer.NrDosi</p>
                        </td>
                        <td>
                        <p class="s2">@cer.Variedad</p>
                        </td>
                    </tr>

                }
        </table>
    </div>

}
else if (seleccion && !terminado)
{
    <br/>
    <center>
        <div class="mb-2">
            <br />
            <RadzenProgressBar style="position:relative" Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Primary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}

@code {
    [Parameter] public int opcion { get; set; }
    SocioDTO socioSeleccionado = null;
    List<SocioDTO> socios = new();
    bool terminado = false;
    bool seleccion = false;
    List<TorosuniDTO> toros = new();
    List<CertifsemanDTO> certificados = new();
    Dictionary<string, string> traductor = new Dictionary<string, string>{
        {"P","Puro Pedigree (SRA)"},
        {"S","S/"},
        {"A","Patagonico"},
        {"GP","Ganador de prueba"},
        {"1","Activo"},
        {"2","Inactivo"},
        {"3","Inexistente"},
        {"4","Muerto"},
        {"5","Vendido"}
    };
    protected override async Task OnInitializedAsync()
    {
        var rta = await _socioServicio.LimitadosFiltrados(0, 0);
        socios = rta.List;
    }
    private async Task<IEnumerable<SocioDTO>> BusquedaSocios(string searchText)
    {
        return await Task.FromResult(socios.Where(x => x.Nombre.ToLower().Contains(searchText.ToLower())).ToList());
    }
    private async Task Generate()
    {
        try{
            var coso = socioSeleccionado;
            seleccion = true;
            if (opcion == 1)
            {
                string filtro = $"(Criador == null ? \"\" : Criador).ToLower().Contains(\"{socioSeleccionado.Scod}\".ToLower())";
                var rtaa = await _torosServicio.LimitadosFiltradosNoInclude(0, 0,filtro);
                toros = rtaa.List.Where(x=>x.CodEstado!="4").ToList();
            }
            else if (opcion == 0)
            {
                string filtro = $"(Nrocri == null ? \"\" : Nrocri).ToLower().Contains(\"{socioSeleccionado.Scod}\".ToLower())";
                var rtaa = await _certifsemanServicio.LimitadosFiltrados(0, 0,filtro);
                certificados = rtaa.List;
            }
            terminado = true;
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
    private async Task Print()
        => await js.InvokeVoidAsync("window.print");

}
