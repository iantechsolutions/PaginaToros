@page "/reportegeneral"
@using PaginaToros.Client.Servicios.Contrato;
@using Blazored.Typeahead;
@inject IResin1Servicio _resin1Servicio;
@inject IResin6Servicio _resin6Servicio;
@inject IInspectServicio _inspectServicio;

<div class="row">
    <div class="col-sm">
        <label>Seleccionar Forma de agrupacion</label>
        <br />
        <RadzenDropDown @bind-Value=@seleccion Data=@opciones Style="width: 100%; max-width: 400px;" />
    </div>
    <div class="col-sm">
        <label>Seleccionar Fecha Inicial</label>
        <RadzenDatePicker TValue="DateTime" @bind-Value=@FechaInicial ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
    </div>
    <div class="col-sm">
        <label>Seleccionar Fecha Final</label>
        <RadzenDatePicker TValue="DateTime" @bind-Value=@FechaFinal ShowTime="false" ShowSeconds="false" DateFormat="dd/MM/yyyy" Class="w-75" />
    </div>
</div>
<div class="row">
    <div class="col-sm-1"/>
    <div class="col-sm">
        <label>Selecciona Inspectores a cubrir</label>
        <BlazoredTypeahead SearchMethod="BuscarInspector" @ref="selectIns"
        @bind-Values="inspectoresSeleccionados"
                            EnableDropDown="true"
                            
                            placeholder="Busque por Nombre">
            <SelectedTemplate Context="data">
                @data.Nombre
            </SelectedTemplate>
            <ResultTemplate Context="data">
                @data.Nombre
            </ResultTemplate>
        </BlazoredTypeahead>
    </div>
    <div class="col-sm-2"/>
    <div class="col-sm">
        <label>Selecciona Provincias a cubrir</label>
        <BlazoredTypeahead SearchMethod="BuscarProvincia" @ref="selectProv"
        @bind-Values="provinciasSeleccionadas" 
                           EnableDropDown="true"
                           placeholder="Busque por Nombre">
            <SelectedTemplate Context="data">
                @traductorProvinciaInverso[data]
            </SelectedTemplate>
            <ResultTemplate Context="data">
                @traductorProvinciaInverso[data]
            </ResultTemplate>
        </BlazoredTypeahead>
    </div>
    <div class="col-sm-1" />
</div>
<br/>
<button i class="font-bold px-4 py-3 rounded-2xl bg-gray-200 hover:bg-gray-300 hover:border-transparent transition ease-in duration-100 transform hover:-translate-y-1 active:translate-y-0" style="position:relative;width:100%" @onclick="()=>ConfirmarDatos()" disabled="@(!terminado || confirmado)">Generar Reporte</button>

@if (terminado && confirmado && seleccion == "Inspectores")
{
    <RadzenText TextStyle="Radzen.Blazor.TextStyle.H4">
        Reporte del @FechaInicial.ToString("dd/MM/yyyy") al @FechaFinal.ToString("dd/MM/yyyy")
    </RadzenText>
    <br/>
    <div class="row">
        @foreach (var provincia in provinciasSeleccionadas)
        {
            <RadzenText TextStyle="TextStyle.H5">-@traductorProvinciaInverso[provincia]</RadzenText>
            <br />
            if (inspectoresSeleccionados.Where(i => listaDatos[provincia].Where(x => x.Resin1.Icod == i.Icod).Sum(t => t.Hdp) != 0).Count() > 0)
            {
                <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@inspectoresSeleccionados.Where(i => listaDatos[provincia].Where(x => x.Resin1.Icod == i.Icod).Sum(t => t.Hdp) != 0)"
                                TItem="InspectDTO" SelectionMode="DataGridSelectionMode.Single" LogicalFilterOperator="LogicalFilterOperator.Or" Style="margin-bottom:18px" PagerHorizontalAlign="HorizontalAlign.Center">
                    <Columns>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="Nombre" Title="Nombre del Inspector" />
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vaq PR Presentadas">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Hdp)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vaq PR Marcadas">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.HdpM)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vaq PR Astadas">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.HdpAs)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
                <br />
                <br />
            }
            if (@provinciasSeleccionadas.Where(i => listaDatos[provincia].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hgvp) != 0).Count() > 0)
            {
                <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@inspectoresSeleccionados.Where(i => listaDatos[provincia].Where(x => x.Resin1.Icod == i.Icod).Sum(t => t.Hgvp)!= 0)"
                                TItem="InspectDTO" SelectionMode="DataGridSelectionMode.Single" Style="margin-bottom:18px" LogicalFilterOperator="LogicalFilterOperator.Or" PagerHorizontalAlign="HorizontalAlign.Center">
                    <Columns>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="Nombre" Title="Nombre del Inspector" />
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vacas VIP Presentadas" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Hgvp)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vacas VIP Total" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Hgvb)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vaq VIP Presentadas" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Hgqp)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="Vaq VIP Total" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Hgqb)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="" Filterable="false">
                            <Template Context="data">
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
                <br />
                <br />
            }
            if (@provinciasSeleccionadas.Where(i => listaDatos[provincia].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Mcp) + listaDatos[provincia].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Msp) != 0).Count() > 0)
            {
                <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@inspectoresSeleccionados.Where(i => listaDatos[provincia].Where(x => x.Resin1.Icod == i.Icod).Sum(t => t.Mcp) + listaDatos[provincia].Where(x => x.Resin1.Icod == i.Icod).Sum(t => t.Msp) != 0)"
                                TItem="InspectDTO" SelectionMode="DataGridSelectionMode.Single" Style="margin-bottom:18px" LogicalFilterOperator="LogicalFilterOperator.Or" PagerHorizontalAlign="HorizontalAlign.Center">
                    <Columns>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="Nombre" Title="Nombre del Inspector" />
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="SCP Presentados" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Mcp)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="SCP Mochos" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.McpM)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="SCP Astados" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.McpAs)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="CP Presentados" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Msp)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="CP Mochos" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.MspM)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="CP Astados" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.MspAs)
                            </Template>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn TItem="InspectDTO" Property="" Title="CP Control S" Filterable="false">
                            <Template Context="data">
                                @listaDatos[provincia].Where(x => x.Resin1.Icod == data.Icod).Sum(t => t.Mspsb)
                            </Template>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
                <br />
                <br />
            }
            <br />
        }
        }
    </div>
    <br/>
}
else if (confirmado && terminado && seleccion == "Provincias")
{
    <div class="row">
        <div class="col-sm-6">
            <RadzenText TextStyle="Radzen.Blazor.TextStyle.H4">
                Reporte del @FechaInicial.ToString("dd/MM/yyyy") al @FechaFinal.ToString("dd/MM/yyyy")
            </RadzenText>
        </div>
        <div class="col-sm-2"/>
        <div class="col-sm-4">
            <RadzenText TextStyle="Radzen.Blazor.TextStyle.H6">
                Formato: Presentadas - Marcadas - Astadas
            </RadzenText>
        </div>
    </div>
    <br/>
    <div class="row">
        @foreach (var ins in inspectoresSeleccionados)
        {
            <RadzenText TextStyle="TextStyle.H5">-@ins.Nombre</RadzenText>
            <br/>
            if (@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hdp) + listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hpp) != 0).Count()>0)
            {
            <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hdp) + listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hpp) != 0)"
                TItem="string" SelectionMode="DataGridSelectionMode.Single" LogicalFilterOperator="LogicalFilterOperator.Or" Style="margin-bottom:18px" PagerHorizontalAlign="HorizontalAlign.Center">
                <Columns>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Provincia">
                        <Template Context="data">
                            @traductorProvinciaInverso[data]
                        </Template>    
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vaq PR Presentadas">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hdp)
                        </Template>    
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vaq PR Marcadas">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.HdpM)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vaq PR Astadas">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.HdpAs)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Otros PR Presentados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hpp)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Otros PR Marcados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.HppM)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Otros PR Astados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.HppAs).ToString()
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="" Filterable="false">
                        <Template Context="data">
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
                </RadzenDataGrid>
                <br/>
                <br/>
            }
            if (@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hgvp) != 0).Count() > 0)
            {
                <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hgvp) + listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Hgqp) != 0)"
                TItem="string" SelectionMode="DataGridSelectionMode.Single" Style="margin-bottom:18px" LogicalFilterOperator="LogicalFilterOperator.Or" PagerHorizontalAlign="HorizontalAlign.Center">
                <Columns>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Provincia">
                        <Template Context="data">
                            @traductorProvinciaInverso[data]
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vacas VIP Presentadas" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hgvp)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vacas VIP Total" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hgvb)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vaq VIP Presentadas" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hgqp)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Vaq VIP Total" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Hgqb)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="" Filterable="false">
                        <Template Context="data">
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="" Filterable="false">
                        <Template Context="data">
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="" Filterable="false">
                        <Template Context="data">
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
            <br/>
            <br/>
            }
            if (@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Mcp) + listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Msp) != 0).Count() > 0)
            {
                <RadzenDataGrid PageSize="25" Density="Density.Compact" Data="@provinciasSeleccionadas.Where(i => listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Mcp) + listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == i).Sum(t => t.Msp) != 0)"
                TItem="string" SelectionMode="DataGridSelectionMode.Single" Style="margin-bottom:18px" LogicalFilterOperator="LogicalFilterOperator.Or" PagerHorizontalAlign="HorizontalAlign.Center">
                <Columns>
                    <RadzenDataGridColumn TItem="string" Property="" Title="Provincia">
                        <Template Context="data">
                            @traductorProvinciaInverso[data]
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="SCP Presentados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Mcp)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="SCP Mochos" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.McpM)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="SCP Astados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.McpAs)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="CP Presentados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Msp)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="CP Mochos" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.MspM)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="CP Astados" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.MspAs)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn TItem="string" Property="" Title="CP Control S" Filterable="false">
                        <Template Context="data">
                            @listaDatos[ins.Icod].Where(x => x.Resin1.Establecimiento.Codpro == data).Sum(t => t.Mspsb)
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
            <br />
            <br />
            }
            <br/>
        }

    </div>
    <br/>
}
else if(confirmado)
{
    <br />
    <center>
        <div class="mb-2">
            <br />
            <RadzenProgressBar style="position:relative;" Value="100" ShowValue="false" ProgressBarStyle="ProgressBarStyle.Primary" Mode="ProgressBarMode.Indeterminate" />
        </div>
    </center>
}



@code {
    bool showDataLabels = false;
    bool confirmado = false;
    public BlazoredTypeahead<string,string> selectProv;
    public BlazoredTypeahead<InspectDTO, InspectDTO> selectIns;
    public DateTime FechaInicial { get; set; } = DateTime.Now.AddDays(-700);
    public DateTime FechaFinal { get; set; } = DateTime.Now;
    bool terminado = false;
    string seleccion = "";
    List<string> opciones = new List<string> { "Inspectores", "Provincias" };
    List<Resin1DTO> reportes = new();
    List<Resin6DTO> datos = new ();
    Dictionary<string,List<Resin6DTO>> listaDatos = new();
    List<Resin6DTO> datosActuales = new();
    List<InspectDTO> Inspects = null;
    List<string> provincias = new List<string> { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23","24" };
    IList<string> provinciasSeleccionadas;
    IList<InspectDTO> inspectoresSeleccionados;
    Dictionary<string, string> traductorProvinciaInverso = new Dictionary<string, string>
    {
        {"01", "Chaco"},
        {"02", "Corrientes"},
        {"03", "Entre Rios"},
        {"04", "Santa Fe"},
        {"05", "Cordoba"},
        {"06", "La pampa"},
        {"07", "San Luis"},
        {"08", "Santa Cruz"},
        {"09", "Tierra del fuego"},
        {"10", "Chubut"},
        {"11", "Neuquen"},
        {"12", "Rio negro"},
        {"13", "Buenos Aires"},
        {"14", "Capital Federal"},
        {"15", "Catamarca"},
        {"16", "Formosa"},
        {"17", "Jujuy"},
        {"18", "La rioja"},
        {"19", "Mendoza"},
        {"20", "Misiones"},
        {"21", "Salta"},
        {"22", "San Juan"},
        {"23", "Santiago Del Estero"},
        {"24", "Tucuman"},
        {"",""}
    };


    protected override async Task OnInitializedAsync()
    {
        try{
            var rt = await _resin6Servicio.ObtenerFechas(FechaInicial.Ticks,FechaFinal.Ticks);
            datos = rt.List;
            var rtaa = await _inspectServicio.LimitadosFiltrados(0, 0);
            Inspects = rtaa.List;
            terminado = true;
            provinciasSeleccionadas = provincias;
            inspectoresSeleccionados = Inspects;

            Console.WriteLine(7);
        }
        catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    // protected override Task OnAfterRenderAsync(bool firstRender)
    // {
    //     // if(firstRender)
    //     // {
    //     //     selectProv.Values.Concat(provincias);
    //     //     selectIns.Values.Concat(Inspects);
    //     // }
    //     // return base.OnAfterRenderAsync(firstRender);
    // }

    private async Task<IEnumerable<InspectDTO>> BuscarInspector(string searchText)
    {
        return await Task.FromResult(Inspects.Where(x => x.Nombre.ToLower().Contains(searchText.ToLower())).ToList());
    }
    private async Task<IEnumerable<string>> BuscarProvincia(string searchText)
    {
        return await Task.FromResult(provincias.Where(x => traductorProvinciaInverso[x].Contains(searchText.ToLower())).ToList());
    }
    public void ConfirmarDatos()
    {
        try{
            if(seleccion == "Inspectores"){
                foreach (var provincia in provinciasSeleccionadas)
                {
                    var data = datos.Where(x => x.Resin1.Establecimiento.Codpro == provincia).ToList();
                    listaDatos.Add(provincia,data);
                }
            }
            else{
                foreach (var ins in inspectoresSeleccionados)
                {
                    var data = datos.Where(x => x.Resin1.Icod == ins.Icod).ToList();
                    listaDatos.Add(ins.Icod, data);
                }
            }
            confirmado = true;
            var coso = listaDatos;
        }
        catch(Exception ex )
        {
            Console.WriteLine(ex.Message);
        }
    }
}
