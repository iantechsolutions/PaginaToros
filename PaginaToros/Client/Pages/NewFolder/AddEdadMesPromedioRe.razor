@using Blazored.Typeahead
<style>
    .bm-title {
        font-size: 25px;
        font-weight: bold;
    }
</style>
<div class="card" >
<div class="card-body">
    <EditForm Model="@oEdadMesPromedioRe" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <table class="table table-bordered text-center">
            <tbody>
            <tr>
                <th style="background-color:#008000">Sexo:</th>
                <td><strong>@oEdadMesPromedioRe.Sexo</strong></td>
            </tr>
            <tr>
                <td>Promedio Edad:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Pedad Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td>Promedio Peso:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Ppeso Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#CCCCCC">Min. Edad:</td>
                <td>
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Iedad Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#CCCCCC">Max. Edad:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Medad Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#999999">Min. Peso:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Ipeso Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#999999">Max. Peso:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Mpeso Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#333333;color:#FFF">Diente de leche %:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.Pdl Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#333333;color:#FFF">Dos dientes %:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.P2d Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>
            <tr>
                <td style="background-color:#333333;color:#FFF">Cuatro dientes %:</td>
                <td bgcolor="#FFFFFF">
                    <RadzenNumeric @bind-Value=@oEdadMesPromedioRe.P4d Style="width: 100%; max-width: 400px;" />
                </td>
            </tr>

            </tbody>
        </table>
        <br />
        <br />
        <button type="submit" class="btn btn-primary mr-2">Aceptar</button>
        <button type="button" @onclick="cancel" class="btn btn-light">Cancelar</button>
        </EditForm>
    </div>
</div>

@code {
    EdadMesPromedioRe oEdadMesPromedioRe = new();
    Respuesta<EdadMesPromedioRe> oRespuesta = new();
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [Parameter] public int Id { get; set; }
    [Parameter] public int nrores { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (Id != 0)
        {
            try
            {
                oRespuesta = await Http.GetFromJsonAsync<Respuesta<EdadMesPromedioRe>>($"/api/EdadMesPromedioRe/{Id}");
                oEdadMesPromedioRe = oRespuesta.List;

            }
            catch (Exception ex)
            {
                oRespuesta.Mensaje = ex.Message;
            }
        }
    }
    async Task Guardar()
    {
        if (Id == 0)
        {
            oEdadMesPromedioRe.Nrores = nrores;
            await Http.PostAsJsonAsync<EdadMesPromedioRe>("/api/EdadMesPromedioRe", oEdadMesPromedioRe);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
        else
        {
            await Http.PutAsJsonAsync<EdadMesPromedioRe>("/api/EdadMesPromedioRe", oEdadMesPromedioRe);
            await ModalInstance.CloseAsync(ModalResult.Ok($"Form was submitted successfully."));
        }
    }
    async Task cancel()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok($"Form was cancelled"));

    }
}
